##########################################################################
#  Copyright (C) 2017-2018 Barcelona Supercomputing Center               #
#                          Centro Nacional de Supercomputacion           #
#  All rights reserved.                                                  #
#                                                                        #
#  This file is part of the NORNS Data Scheduler, a service that allows  #
#  other programs to start, track and manage asynchronous transfers of   #
#  data resources transfers requests between different storage backends. #
#                                                                        #
#  See AUTHORS file in the top level directory for information           #
#  regarding developers and contributors.                                #
#                                                                        #
#  The NORNS Data Scheduler is free software: you can redistribute it    #
#  and/or modify it under the terms of the GNU Lesser General Public     #
#  License as published by the Free Software Foundation, either          #
#  version 3 of the License, or (at your option) any later version.      #
#                                                                        #
#  The NORNS Data Scheduler is distributed in the hope that it will be   #
#  useful, but WITHOUT ANY WARRANTY; without even the implied warranty   #
#  of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  #
#  Lesser General Public License for more details.                       #
#                                                                        #
#  You should have received a copy of the GNU Lesser General             #
#  Public License along with the NORNS Data Scheduler.  If not, see      #
#  <http://www.gnu.org/licenses/>.                                       #
##########################################################################

AM_CPPFLAGS = -I m4

TESTS = api core

check_PROGRAMS = $(TESTS) api_interactive

END = 

api_CXXFLAGS = \
	-Wall -Wextra \
	$(END)

api_CPPFLAGS = \
	-I$(top_srcdir)/include \
	-I$(top_srcdir)/rpc \
	-I$(top_srcdir)/src \
	-D__NORNS_DEBUG__ \
	$(END)

api_SOURCES = \
	catch.hpp \
	api-main.cpp \
	api-namespace-register.cpp \
	api-namespace-unregister.cpp \
	api-copy-local-data.cpp \
	api-job-register.cpp \
	api-job-update.cpp \
	api-job-unregister.cpp \
	api-ping.cpp \
	api-process-add.cpp \
	api-process-remove.cpp \
	api-resource-init.cpp \
	api-task-init.cpp \
	api-task-submit.cpp \
	api-task-status.cpp \
	compare-files.cpp \
	compare-files.hpp \
	config-template.cpp \
	config-template.hpp \
	fake-daemon.cpp \
	fake-daemon.hpp \
	test-env.cpp \
	test-env.hpp \
	$(END)

api_LDFLAGS = \
    @BOOST_ASIO_LIB@ \
	@BOOST_LDFLAGS@	\
	@BOOST_FILESYSTEM_LIB@ \
    @BOOST_PROGRAM_OPTIONS_LIB@	\
    @BOOST_SYSTEM_LIB@ \
    @BOOST_THREAD_LIB@ \
    @BOOST_REGEX_LIB@ \
	@PROTOBUF_LIBS@ \
	-Wl,-rpath,$(top_builddir)/lib/.libs \
	$(top_builddir)/src/liburd_aux.la \
	$(top_builddir)/lib/libnorns_debug.la \
	$(top_builddir)/lib/libnornsctl_debug.la \
	$(END)

EXTRA_api_DEPENDENCIES = \
	$(top_builddir)/src/liburd_aux.la \
	$(top_builddir)/lib/libnorns_debug.la \
	$(top_builddir)/lib/libnornsctl_debug.la \
	$(END)

BUILT_SOURCES = \
	config-template.cpp

edit = $(SED) \
		-e 's|\"|\\"|g'  \
		-e 's|^|    "|g' \
		-e 's|$$|\\n"|g'

config-template.cpp: Makefile $(top_srcdir)/etc/norns.conf.in
	@( echo "/* This file autogenerated by Makefile */"; \
	   echo "#include \"config-template.hpp\""; \
	   echo ""; \
	   echo "const std::string config_file::cftemplate = "; \
	   $(edit) $(top_srcdir)/etc/norns.conf.in ; \
	   echo ";"; \
	) > $@

# The following produces a version of the api tests where the urd daemon 
# is not started automatically by the test, so that a running daemon can be
# tested interactively
api_interactive_CXXFLAGS = \
	$(api_CXXFLAGS)
api_interactive_CPPFLAGS = \
	$(api_CPPFLAGS) \
	-DUSE_REAL_DAEMON \
	-D__NORNS_DEBUG__
api_interactive_SOURCES = \
	$(api_SOURCES)
api_interactive_LDFLAGS = \
	$(api_LDFLAGS)
EXTRA_api_interactive_DEPENDENCIES = \
	$(EXTRA_api_DEPENDENCIES)


core_CXXFLAGS = \
	-Wall -Wextra \
	$(END)

core_CPPFLAGS = \
	-I$(top_srcdir)/include \
	-I$(top_srcdir)/rpc \
	-I$(top_srcdir)/src \
	$(END)

core_SOURCES = \
	catch.hpp \
	api-main.cpp \
	utils-path-normalize.cpp \
	$(END)

core_LDFLAGS = \
    @BOOST_ASIO_LIB@ \
	@BOOST_LDFLAGS@	\
	@BOOST_FILESYSTEM_LIB@ \
    @BOOST_PROGRAM_OPTIONS_LIB@	\
    @BOOST_SYSTEM_LIB@ \
    @BOOST_THREAD_LIB@ \
	@PROTOBUF_LIBS@ \
	$(top_builddir)/src/liburd_aux.la \
	$(top_builddir)/lib/libnorns_debug.la \
	$(top_builddir)/lib/libnornsctl_debug.la \
	$(END)

EXTRA_core_DEPENDENCIES = \
	$(top_builddir)/src/liburd_aux.la \
	$(top_builddir)/lib/libnorns_debug.la \
	$(top_builddir)/lib/libnornsctl_debug.la \
	$(END)

MOSTLYCLEANFILES = \
	config-template.cpp
